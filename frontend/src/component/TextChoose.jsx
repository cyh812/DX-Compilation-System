import React, { useState, useEffect, useCallback } from 'react';
import '../style/TextChoose.css'; // 如果有同名样式文件，可以保留这一行
import { SvgIcon, Button, Typography, Box } from '@mui/material';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';
import TextField from '@mui/material/TextField';

/**
 * MyComponent 说明：
 * - 在这里写组件的简要描述
 * - 列出主要 props 及其作用
 */
const TextChoose = ({ title, children, onAction }) => {
    // —— 1. 状态管理（useState） ——
    const [count, setCount] = useState(0);
    const [value, setValue] = React.useState(30);

    function Cut(props) {
        return (
            <SvgIcon {...props}>
                <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8.26487 2.52462V6.98993C8.26439 7.41274 8.09488 7.81809 7.79351 8.11706C7.49215 8.41603 7.08355 8.5842 6.65736 8.58468H2.15634C1.73015 8.5842 1.32155 8.41603 1.02019 8.11706C0.718823 7.81809 0.549307 7.41274 0.548828 6.98993V2.52462C0.549307 2.10181 0.718823 1.69646 1.02019 1.39749C1.32155 1.09852 1.73015 0.930345 2.15634 0.929871H6.65736C7.08355 0.930345 7.49215 1.09852 7.79351 1.39749C8.09488 1.69646 8.26439 2.10181 8.26487 2.52462ZM22.7324 8.58468H27.2335C27.6597 8.5842 28.0683 8.41603 28.3696 8.11706C28.671 7.81809 28.8405 7.41274 28.841 6.98993V2.52462C28.8405 2.10181 28.671 1.69646 28.3696 1.39749C28.0683 1.09852 27.6597 0.930345 27.2335 0.929871H22.7324C22.3063 0.930345 21.8977 1.09852 21.5963 1.39749C21.2949 1.69646 21.1254 2.10181 21.1249 2.52462V6.98993C21.1254 7.41274 21.2949 7.81809 21.5963 8.11706C21.8977 8.41603 22.3063 8.5842 22.7324 8.58468ZM6.65736 11.1363H2.15634C1.73015 11.1368 1.32155 11.3049 1.02019 11.6039C0.718823 11.9029 0.549307 12.3082 0.548828 12.731V17.1963C0.549307 17.6191 0.718823 18.0245 1.02019 18.3235C1.32155 18.6224 1.73015 18.7906 2.15634 18.7911H6.65736C7.08355 18.7906 7.49215 18.6224 7.79351 18.3235C8.09488 18.0245 8.26439 17.6191 8.26487 17.1963V12.731C8.26439 12.3082 8.09488 11.9029 7.79351 11.6039C7.49215 11.3049 7.08355 11.1368 6.65736 11.1363ZM11.1656 2.95959L17.5884 6.63848C17.6862 6.69448 17.7971 6.72395 17.91 6.72395C18.0228 6.72394 18.1337 6.69445 18.2315 6.63845C18.3292 6.58244 18.4104 6.5019 18.4668 6.4049C18.5233 6.30791 18.5529 6.19789 18.5529 6.0859V2.52462C18.5524 2.10181 18.3829 1.69646 18.0816 1.39749C17.7802 1.09852 17.3716 0.930345 16.9454 0.929871H12.4444C12.0521 0.930085 11.6735 1.07248 11.3797 1.33027C11.0859 1.58806 10.8971 1.94348 10.8489 2.32966C10.8336 2.4539 10.8555 2.57987 10.9118 2.69188C10.9681 2.8039 11.0564 2.897 11.1656 2.95959ZM6.65736 21.3427H2.15634C1.73015 21.3432 1.32155 21.5113 1.02019 21.8103C0.718823 22.1093 0.549307 22.5146 0.548828 22.9374V27.4027C0.549307 27.8256 0.718823 28.2309 1.02019 28.5299C1.32155 28.8289 1.73015 28.997 2.15634 28.9975H6.65736C7.08355 28.997 7.49215 28.8289 7.79351 28.5299C8.09488 28.2309 8.26439 27.8256 8.26487 27.4027V22.9374C8.26439 22.5146 8.09488 22.1093 7.79351 21.8103C7.49215 21.5113 7.08355 21.3432 6.65736 21.3427ZM29.6208 15.0492L14.5856 6.43755L11.8142 4.85017C11.5128 4.67734 11.255 4.78738 11.1584 4.84279C11.0606 4.89878 10.9795 4.97929 10.923 5.07626C10.8666 5.17322 10.8369 5.28321 10.8369 5.39518V25.808C10.8369 25.9331 10.8739 26.0554 10.9434 26.1598C11.0129 26.2641 11.1119 26.3459 11.2278 26.3949C11.3438 26.444 11.4718 26.4581 11.5958 26.4355C11.7198 26.413 11.8344 26.3547 11.9254 26.2681L16.5871 21.8251L20.5169 28.5777C20.73 28.9439 21.0811 29.2111 21.4928 29.3206C21.9045 29.4301 22.3432 29.3729 22.7124 29.1616L26.6106 26.9289C26.7934 26.8242 26.9537 26.6848 27.0822 26.5186C27.2108 26.3525 27.3051 26.1628 27.3597 25.9605C27.4144 25.7582 27.4283 25.5472 27.4008 25.3396C27.3732 25.1319 27.3047 24.9317 27.1991 24.7503L23.269 17.9977L29.478 16.2144C29.5991 16.1796 29.7072 16.1102 29.7889 16.015C29.8706 15.9197 29.9222 15.8027 29.9374 15.6786C29.9526 15.5544 29.9307 15.4285 29.8744 15.3166C29.8181 15.2047 29.7298 15.1117 29.6206 15.0492H29.6208Z" fill="black" />
                </svg>
            </SvgIcon>
        );
    }

    function Online(props) {
        return (
            <SvgIcon {...props}>
                <svg width="33" height="32" viewBox="0 0 33 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12.3373 16.7273C12.5392 21.6099 14.7139 25.4604 15.9479 27.2694C16.0888 27.4751 16.2183 27.6541 16.3287 27.8064C16.3821 27.8064 16.4316 27.8141 16.4887 27.8141C16.5306 27.8141 16.5687 27.8103 16.6106 27.8064C16.801 27.5513 17.0409 27.2123 17.3075 26.801C18.5644 24.8434 20.423 21.2252 20.6096 16.7311H12.3373V16.7273ZM14.4206 4.41029C14.4206 4.40648 14.4244 4.40648 14.4244 4.40267C9.14194 5.33959 5.07056 9.79944 4.72778 15.261H10.8596C11.05 10.4545 13.0534 6.5431 14.4206 4.41029ZM19.2309 26.4811C18.9909 26.9038 18.7548 27.2885 18.5377 27.6236C23.8393 26.6905 27.9221 22.2116 28.2534 16.7273H22.0873C21.935 20.8596 20.4991 24.253 19.2309 26.4811ZM20.6096 15.261C20.3963 10.4736 18.2102 6.56976 16.98 4.73402C16.8467 4.53597 16.7248 4.36459 16.622 4.21986L16.6182 4.21605C16.5763 4.21605 16.5344 4.20844 16.4887 4.20844C16.4354 4.20844 16.3821 4.21605 16.3287 4.21605C15.2281 5.73949 12.5773 9.9594 12.3373 15.261H20.6096Z" fill="black" />
                    <path d="M16.4889 0.373108C7.85101 0.373108 0.85083 7.37329 0.85083 16.0112C0.85083 24.649 7.85101 31.6492 16.4889 31.6492C25.1268 31.6492 32.127 24.649 32.127 16.0112C32.127 7.37329 25.1268 0.373108 16.4889 0.373108ZM16.4889 29.486C11.2483 29.486 6.70844 26.4734 4.48041 22.0973C4.19477 21.5374 4.60991 20.8709 5.23832 20.8709C5.55824 20.8709 5.84008 21.0575 5.98481 21.3432C7.63012 24.5805 10.7189 26.957 14.4056 27.6197C13.0345 25.5136 11.035 21.6403 10.8522 16.731H3.74536C3.74536 16.731 3.46352 16.7348 3.2312 16.5177C3.0103 16.3082 3.0103 16.0302 3.0103 16.015C3.0103 8.58442 9.05453 2.53639 16.4889 2.53639C21.7143 2.53639 26.2465 5.53374 28.4821 9.89458C28.7678 10.4544 28.3564 11.1248 27.728 11.1248C27.4081 11.1248 27.1263 10.9381 26.9815 10.6563C25.3248 7.4228 22.2208 5.04624 18.5227 4.40259C18.5684 4.47115 18.6141 4.54351 18.6598 4.61587L18.6941 4.673C18.7017 4.68824 18.7131 4.70347 18.7207 4.71871C20.0728 6.90864 21.9047 10.6791 22.0913 15.2685H29.2324C29.2324 15.2685 29.5219 15.238 29.7694 15.4932C29.937 15.6646 29.9713 15.8664 29.9713 16.015C29.9941 23.4417 23.9194 29.486 16.4889 29.486Z" fill="black" />
                </svg>
            </SvgIcon>
        );
    }

    function Literature(props) {
        return (
            <SvgIcon {...props}>
                <svg width="31" height="31" viewBox="0 0 31 31" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M29.2554 0.563549C29.9775 0.563549 30.6996 1.29143 30.6996 2.01931V18.7606H8.31438C5.90737 18.7606 3.74105 20.7016 3.74105 23.3705C3.74105 26.0394 5.66666 27.7378 8.31438 27.7378H30.9403V29.1935C30.9403 29.9214 30.2182 30.6493 29.4961 30.6493H6.62947C3.25965 30.6493 0.611938 27.9804 0.611938 24.5836V6.38659C0.611938 2.98982 3.25965 0.320923 6.62947 0.320923H29.2554V0.563549ZM30.6996 21.6721V24.5836H8.31438C7.59227 24.5836 6.87017 23.8557 6.87017 23.1278C6.87017 22.4 7.59227 21.6721 8.31438 21.6721H30.6996Z" fill="#2C2C2C" />
                </svg>

            </SvgIcon>
        );
    }

    function Search(props) {
        return (
            <SvgIcon {...props}>
                <svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M13.2098 20.6141C8.93989 20.6141 5.47197 17.1583 5.47197 12.9027C5.47197 8.64594 8.93989 5.19013 13.2098 5.19013C16.6368 5.19013 19.5461 7.41473 20.5627 10.4922C20.8127 11.25 20.9487 12.0608 20.9487 12.9027C20.9487 17.1583 17.4808 20.6141 13.2098 20.6141ZM33.9012 30.7735C33.7994 30.4206 33.6136 30.1076 33.3691 29.8366C30.8525 27.2359 28.2873 24.6794 25.6777 22.1716C25.5527 22.0588 25.4211 21.957 25.2762 21.8718C24.9344 21.6716 24.5538 21.5698 24.16 21.5521L24.0063 21.5566L23.1091 20.6705L22.9676 20.5333C24.6257 18.4315 25.6147 15.781 25.6147 12.9027C25.6147 6.07842 20.0572 0.539612 13.2098 0.539612C6.36356 0.539612 0.804932 6.07842 0.804932 12.9027C0.804932 19.7258 6.36356 25.2646 13.2098 25.2646C16.0395 25.2646 18.649 24.3188 20.7386 22.7247L20.8912 22.8807L21.7784 23.7734L21.7751 23.8442C21.774 24.0677 21.8038 24.29 21.8658 24.5046C21.9676 24.8564 22.1523 25.1695 22.3968 25.4405C24.9145 28.0423 27.4786 30.5976 30.0881 33.1065C30.3404 33.3311 30.6257 33.5059 30.9488 33.611C31.2408 33.7061 31.5516 33.7426 31.8581 33.7183C32.1368 33.695 32.4111 33.622 32.6634 33.5026C33.4587 33.1276 33.9831 32.3101 33.9908 31.4328C33.993 31.2105 33.962 30.987 33.9012 30.7735Z" fill="black" />
                </svg>
            </SvgIcon>
        );
    }

    return (
        <div className='P'>
            <div className='T1'>
                <TextField
                    fullWidth
                    multiline            // 启用多行，这样超出高度会滚动
                    rows={4}             // 默认显示行数
                    variant="outlined"
                    label="Outlined"
                    sx={{
                        // 1. 整体背景色
                        '& .MuiOutlinedInput-root': {
                            backgroundColor: '#ffffff',
                            // 2. 自定义高度 (控制输入区域总高度)
                            height: 130,
                        },
                        // 3. 文本输入区超出时显示滚动条
                        '& .MuiOutlinedInput-input': {
                            height: '100%',
                            overflow: 'auto',
                        },
                    }}
                />
            </div>

            <div className='ButtonGroup2'>
                <Button
                    variant="contained"
                    startIcon={<Online />}
                >
                    Upload
                </Button>
                <Button
                    variant="contained"
                    startIcon={<Literature />}
                >
                    Delete
                </Button>
            </div>
            <div className="SliderGroup">
                <div className="sliderRow">
                    <label htmlFor="s2" style={{
                        fontWeight: 'bolder'
                    }}>K-value</label>
                    <input
                        id="s2"
                        type="range"
                        min="0"
                        max="100"
                        onChange={e => setValue(e.target.value)}
                        style={{
                            background: 'blue',
                            width: '800px'   // 直接指定你想要的长度
                        }}
                    />
                    <label htmlFor="s2" style={{
                        fontWeight: 'bolder'
                    }}>{value}</label>
                </div>
            </div>

            <div className='search'>
                <FormControlLabel control={<Checkbox />} label="hello1" />
                <Button variant="contained" startIcon={<Search />} >
                    Search
                </Button>
            </div>
        </div>
    );
};

export default TextChoose;
